name: Run tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  execute_tests:
    name: Execute Django tests
    environment: PRODUCTION_FIREBASE
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Execute tests
        env:
          DJANGO_DEBUG: ${{ vars.DJANGO_DEBUG }}
          DJANGO_ENV: ${{ vars.DJANGO_ENV }}
          DJANGO_SETTINGS_MODULE: ${{ vars.DJANGO_SETTINGS_MODULE }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_CLIENT_CERT_URL: ${{ secrets.FIREBASE_CLIENT_CERT_URL }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_TEST_USER1_EMAIL: ${{ vars.FIREBASE_TEST_USER1_EMAIL }}
          FIREBASE_TEST_USER1_PWD: ${{ secrets.FIREBASE_TEST_USER1_PWD }}
          FIREBASE_TEST_USER2_EMAIL: ${{ vars.FIREBASE_TEST_USER2_EMAIL }}
          FIREBASE_TEST_USER2_PWD: ${{ secrets.FIREBASE_TEST_USER2_PWD }}
        run: python src/manage.py test -v 2

  execute_linter:
    name: Execute Python linter
    environment: PRODUCTION_FIREBASE
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Running linter
        env:
          DJANGO_DEBUG: ${{ vars.DJANGO_DEBUG }}
          DJANGO_ENV: ${{ vars.DJANGO_ENV }}
          DJANGO_SETTINGS_MODULE: ${{ vars.DJANGO_SETTINGS_MODULE }}
          DJANGO_SECRET_KEY: 'none'
        run: pylint --rcfile=pylintrc ./src

  execute_code_style_checker:
    name: Execute flake8 code style checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Running flake8
        run: flake8 src/ --config=flake8 --show-source --statistics  --benchmark
